# Назначение файла: пример переменных окружения для бота и мини-приложения.
# Личные значения храните только локально.

# BOT_TOKEN — токен Telegram-бота, вы получаете его у BotFather.
BOT_TOKEN=rotated_bot_token
# BOT_API_URL — адрес локального сервера telegram-bot-api.
# По умолчанию используется https://api.telegram.org
BOT_API_URL=http://localhost:8081

# CHAT_ID — идентификатор чата или пользователя для уведомлений по умолчанию.
CHAT_ID=your_chat_id

# JWT_SECRET — строка для подписи JWT, придумайте её сами и никому не показывайте.
JWT_SECRET=rotated_jwt_secret

# JWT_MISSING_STATUS — текст ошибки при отсутствии или неверном JWT. Можно оставить как есть.
JWT_MISSING_STATUS=Missing or invalid JWT token

# MONGO_DATABASE_URL — строка подключения к MongoDB.
# По умолчанию используется локальный контейнер из Docker Compose
# с учётными данными admin/admin.
MONGO_DATABASE_URL=mongodb://admin:admin@localhost:27017/ermdb?authSource=admin
# Для Railway укажите URL вида mongodb://user:pass@host:port/?authSource=admin


# APP_URL — базовый HTTPS‑адрес мини-приложения.
# APP_URL должен быть HTTPS, это условие также проверяет bot/src/config.js
APP_URL=https://example.com
# COOKIE_DOMAIN — домен для cookie в продакшене. Можно указать полный URL,
# hostname будет выделен автоматически. В разработке оставьте пустым.
COOKIE_DOMAIN=

# COOKIE_SECURE=false разрешает передачу cookie по HTTP, используйте только для локальной отладки.
COOKIE_SECURE=true

# DISABLE_CSRF=1 полностью отключает проверку CSRF. Используйте только в тестах.
DISABLE_CSRF=0

# PORT — внутренний порт Node.js приложения.
PORT=3000

# CAPTCHA_TOKEN — секрет для обхода лимита запросов.
CAPTCHA_TOKEN=

# HOST_PORT — внешний порт, на котором приложение доступно снаружи.
HOST_PORT=3000

# LOCALE — локализация приложения.
LOCALE=ru



# BOT_USERNAME — имя бота, заданное у BotFather.
BOT_USERNAME=your_bot_username

# VITE_BOT_USERNAME и VITE_CHAT_ID — эти же значения для фронтенда.
VITE_BOT_USERNAME=your_bot_username
VITE_CHAT_ID=your_chat_id
# VITE_TELEGRAM_API_ID и VITE_TELEGRAM_API_HASH — параметры клиентского API Telegram. Сейчас не используются.
VITE_TELEGRAM_API_ID=
VITE_TELEGRAM_API_HASH=

# SCHEDULE_CRON — CRON‑выражение для планировщика задач.
SCHEDULE_CRON=*/1 * * * *

# KEY_ROTATION_CRON — CRON‑выражение для пересоздания ключей.
KEY_ROTATION_CRON=0 0 * * *

# SECRETS_MANAGER — используемое хранилище секретов: aws или vault.
SECRETS_MANAGER=
# AWS_REGION и AWS_SECRET_ID нужны для AWS Secrets Manager.
AWS_REGION=
AWS_SECRET_ID=
# VAULT_ADDR, VAULT_TOKEN и VAULT_SECRET_PATH — параметры HashiCorp Vault.
VAULT_ADDR=
VAULT_TOKEN=
VAULT_SECRET_PATH=

# R2_CORS_ORIGIN — список разрешённых Origin через запятую.
R2_CORS_ORIGIN=https://example.com

# ROUTING_URL — адрес сервиса ORSM (по умолчанию /route)
ROUTING_URL=https://orsm-production.up.railway.app/route
# VITE_ROUTING_URL — тот же адрес для клиентской части
VITE_ROUTING_URL=https://orsm-production.up.railway.app/route

# OSRM_ALGORITHM — алгоритм сервиса OSRM (ch или mld)
OSRM_ALGORITHM=mld

# ROUTE_CACHE_ENABLED=0 отключает кеш OSRM
ROUTE_CACHE_ENABLED=1
# ROUTE_CACHE_TTL — время жизни кеша в секундах
ROUTE_CACHE_TTL=600
# ROUTE_TABLE_GUARD=0 отключает ограничение /table
ROUTE_TABLE_GUARD=1
# ROUTE_TABLE_MAX_POINTS — максимум точек в матрице /table
ROUTE_TABLE_MAX_POINTS=25
# ROUTE_TABLE_MIN_INTERVAL_MS — минимальный интервал между запросами /table
ROUTE_TABLE_MIN_INTERVAL_MS=200

# RETRY_ATTEMPTS и RETRY_DELAY_MS управляют подключением к MongoDB.
# По умолчанию выполняется 10 попыток с задержкой 5 секунд.
# Значение 0 для RETRY_ATTEMPTS означает бесконечные попытки.
RETRY_ATTEMPTS=10
RETRY_DELAY_MS=5000

# ADMIN_ROLE_ID и USER_ROLE_ID задают идентификаторы ролей по умолчанию
ADMIN_ROLE_ID=686591126cc86a6bd16c18af
USER_ROLE_ID=686633fdf6896f1ad3fa063e

# LOG_LEVEL управляет уровнем подробности логов. Можно не задавать,
# тогда будет использоваться уровень debug.
LOG_LEVEL=
# LOG_ERROR_WEBHOOK_URL — адрес вебхука для отправки ошибок
LOG_ERROR_WEBHOOK_URL=
# LOG_TELEGRAM_TOKEN и LOG_TELEGRAM_CHAT — бот и чат для уведомлений.
# Переменные необязательны, сообщения будут отправляться только при их наличии.
LOG_TELEGRAM_TOKEN=
LOG_TELEGRAM_CHAT=

# CSP_REPORT_ONLY=true включает режим отчётов для CSP.
# Дополнительные источники указываются через пробел.
CSP_REPORT_ONLY=true
CSP_CONNECT_SRC_ALLOWLIST=
CSP_IMG_SRC_ALLOWLIST=
CSP_SCRIPT_SRC_ALLOWLIST=
CSP_STYLE_SRC_ALLOWLIST=
CSP_FONT_SRC_ALLOWLIST=
